full_join(SingleM, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species"))
data = data[,c(1:15,23:67,16:22)]
data_ampvis_prelim = amp_load(otutable = data, metadata = metadata)
data_ampvis = amp_subset_samples(data_ampvis_prelim, Database == "MIDAS")
data_ampvis_rarefied = amp_subset_samples(data_ampvis, rarefy = 5801)
graftm_comp_ampvis = amp_subset_samples(data_ampvis_prelim, Classifier == "GraftM")
graftm_comp_ampvis_rarefied = amp_subset_samples(graftm_comp_ampvis, rarefy = 5801)
graftm_silva_rarefied = amp_subset_samples(graftm_comp_ampvis_rarefied, Database == "Silva")
amplicon_ampvis = amp_subset_samples(data_ampvis, Classifier == "Amplicon")
graftm_ampvis = amp_subset_samples(data_ampvis, Classifier == "GraftM")
graftm_ampvis_rarefied = amp_subset_samples(graftm_ampvis, rarefy = 5801)
stats_graftm = amp_alphadiv(graftm_ampvis_rarefied)
stats_graftm_nonrarefied = amp_alphadiv(graftm_ampvis)
amplicon_ampvis_rarefied = amp_subset_samples(amplicon_ampvis, rarefy = 5801)
### Table 3.1 - Statstics from GraftM taxonomic classification
stats_graftm_nonrarefied = stats_graftm_nonrarefied %>% arrange(Plant)
wwtp_plants = stats_graftm$Plant
reads_classified = stats_graftm_nonrarefied$Reads
reads_extracted = c(8712,7886 ,6123 ,7217 ,8269 ,8107 ,6841 ,7212 ,7223 ,8312 ,7679 ,7571 ,6582 ,8050)
metagenome_size = c(17056633, 16547260, 14846304, 15870938, 19764160, 16805544, 15488718, 16159208, 17137236, 19515615, 15127001, 17891614, 15305860, 20471072)
graftm_reads_comp = data.frame(reads_extracted, reads_classified, metagenome_size)
graftm_reads_comp = graftm_reads_comp %>% mutate(rRNA_per_genome = reads_extracted / (metagenome_size / (3500000/1550)))
graftm_reads_comp = graftm_reads_comp %>% mutate(reads_unclassified = reads_extracted - reads_classified)
graftm_reads_comp = graftm_reads_comp[,c(1,2,5,3,4)]
graftm_reads_comp$rRNA_per_genome = round(graftm_reads_comp$rRNA_per_genome, 2)
colnames(graftm_reads_comp) = c("Extracted Reads", "Classified Reads","Unclassified Reads" ,"Metagenome Size (Reads)", "Theoretical 16S rRNA per genome")
rownames(graftm_reads_comp) = stats_graftm$Plant
print(graftm_reads_comp)
graftm_reads_comp_summary = data.frame(c(mean(graftm_reads_comp$`Extracted Reads`), mean(graftm_reads_comp$`Classified Reads`), mean(graftm_reads_comp$`Unclassified Reads`), mean(graftm_reads_comp$`Metagenome Size`), mean(graftm_reads_comp$`Theoretical 16S rRNA per genome`)),c(sd(graftm_reads_comp$`Extracted Reads`), sd(graftm_reads_comp$`Classified Reads`), sd(graftm_reads_comp$`Unclassified Reads`), sd(graftm_reads_comp$`Metagenome Size`), sd(graftm_reads_comp$`Theoretical 16S rRNA per genome`)))
print(graftm_reads_comp_summary)
### Table 3.2 - Ampvis vs GraftM reads on taxonomic levels
graftm_otu_rarefied_sum = graftm_otu_rarefied %>% mutate(summed_reads = AalE_GraftM_Midas + AalW_GraftM_Midas + Aved_GraftM_Midas + Bjer_GraftM_Midas + Damh_GraftM_Midas + Ega_GraftM_Midas + Ejby_GraftM_Midas + EsbE_GraftM_Midas + EsbW_GraftM_Midas + Fred_GraftM_Midas + Hade_GraftM_Midas + Hirt_GraftM_Midas + Hjor_GraftM_Midas + Kalu_GraftM_Midas)
graftm_phylum_sum = aggregate(graftm_otu_rarefied_sum$summed_reads, by=list(Category=graftm_otu_rarefied_sum$Phylum), FUN=sum)
graftm_phylum_sum = graftm_phylum_sum[-1,]
graftm_class_sum = aggregate(graftm_otu_rarefied_sum$summed_reads, by=list(Category=graftm_otu_rarefied_sum$Class), FUN=sum)
graftm_class_sum = graftm_class_sum[-1,]
graftm_order_sum = aggregate(graftm_otu_rarefied_sum$summed_reads, by=list(Category=graftm_otu_rarefied_sum$Order), FUN=sum)
graftm_order_sum = graftm_order_sum[-1,]
graftm_family_sum = aggregate(graftm_otu_rarefied_sum$summed_reads, by=list(Category=graftm_otu_rarefied_sum$Family), FUN=sum)
graftm_family_sum = graftm_family_sum[-1,]
graftm_genus_sum = aggregate(graftm_otu_rarefied_sum$summed_reads, by=list(Category=graftm_otu_rarefied_sum$Genus), FUN=sum)
graftm_genus_sum = graftm_genus_sum[-1,]
graftm_species_sum = aggregate(graftm_otu_rarefied_sum$summed_reads, by=list(Category=graftm_otu_rarefied_sum$Species), FUN=sum)
graftm_species_sum = graftm_species_sum[-1,]
graftm_normalized = c(sum(graftm_phylum_sum$x)/sum(graftm_otu_rarefied_sum$summed_reads), sum(graftm_class_sum$x)/sum(graftm_otu_rarefied_sum$summed_reads), sum(graftm_order_sum$x)/sum(graftm_otu_rarefied_sum$summed_reads), sum(graftm_family_sum$x)/sum(graftm_otu_rarefied_sum$summed_reads), sum(graftm_genus_sum$x)/sum(graftm_otu_rarefied_sum$summed_reads), sum(graftm_species_sum$x)/sum(graftm_otu_rarefied_sum$summed_reads))
amplicon_otu_rarefied_sum = amplicon_otu_rarefied %>% mutate(summed_reads = AalE_Amplicon_Midas + AalW_Amplicon_Midas + Aved_Amplicon_Midas + Bjer_Amplicon_Midas + Damh_Amplicon_Midas + Ega_Amplicon_Midas + Ejby_Amplicon_Midas + EsbE_Amplicon_Midas + EsbW_Amplicon_Midas + Fred_Amplicon_Midas + Hade_Amplicon_Midas + Hirt_Amplicon_Midas + Hjor_Amplicon_Midas + Kalu_Amplicon_Midas)
amplicon_phylum_sum = aggregate(amplicon_otu_rarefied_sum$summed_reads, by=list(Category=amplicon_otu_rarefied_sum$Phylum), FUN=sum)
amplicon_phylum_sum = amplicon_phylum_sum[-1,]
amplicon_class_sum = aggregate(amplicon_otu_rarefied_sum$summed_reads, by=list(Category=amplicon_otu_rarefied_sum$Class), FUN=sum)
amplicon_class_sum = amplicon_class_sum[-1,]
amplicon_order_sum = aggregate(amplicon_otu_rarefied_sum$summed_reads, by=list(Category=amplicon_otu_rarefied_sum$Order), FUN=sum)
amplicon_order_sum = amplicon_order_sum[-1,]
amplicon_family_sum = aggregate(amplicon_otu_rarefied_sum$summed_reads, by=list(Category=amplicon_otu_rarefied_sum$Family), FUN=sum)
amplicon_family_sum = amplicon_family_sum[-1,]
amplicon_genus_sum = aggregate(amplicon_otu_rarefied_sum$summed_reads, by=list(Category=amplicon_otu_rarefied_sum$Genus), FUN=sum)
amplicon_genus_sum = amplicon_genus_sum[-1,]
amplicon_species_sum = aggregate(amplicon_otu_rarefied_sum$summed_reads, by=list(Category=amplicon_otu_rarefied_sum$Species), FUN=sum)
amplicon_species_sum = amplicon_species_sum[-1,]
amplicon_normalized = c(sum(amplicon_phylum_sum$x)/sum(amplicon_otu_rarefied_sum$summed_reads), sum(amplicon_class_sum$x)/sum(amplicon_otu_rarefied_sum$summed_reads), sum(amplicon_order_sum$x)/sum(amplicon_otu_rarefied_sum$summed_reads), sum(amplicon_family_sum$x)/sum(amplicon_otu_rarefied_sum$summed_reads), sum(amplicon_genus_sum$x)/sum(amplicon_otu_rarefied_sum$summed_reads), sum(amplicon_species_sum$x)/sum(amplicon_otu_rarefied_sum$summed_reads))
print(amplicon_normalized)
normalized_readcount = data.frame(round(amplicon_normalized,2), round(graftm_normalized,2))
normalized_readcount = t(normalized_readcount)
normalized_readcount = as.data.frame(normalized_readcount)
rownames(normalized_readcount) = c("Amplicon", "GraftM")
colnames(normalized_readcount) = taxonomic_levels
print(normalized_readcount)
print(reads_classified / reads_extracted)
### Figure 3.15 - Heatmap of 35 most abundant class'
amp_heatmap(data_ampvis_rarefied,
group_by = "Classifier",
tax_aggregate = "Class",
tax_empty = "remove",
tax_show = 35,
tax_add = "Phylum",
normalise = FALSE)
amp_heatmap(data_ampvis_rarefied,
group_by = "Classifier",
tax_aggregate = "Class",
tax_empty = "remove",
tax_show = 35,
tax_add = "Phylum",
normalise = FALSE) +
scale_x_discrete(label = c("Test", "Test2"))
amp_heatmap(data_ampvis_rarefied,
group_by = "Classifier",
tax_aggregate = "Class",
tax_empty = "remove",
tax_show = 35,
tax_add = "Phylum",
normalise = FALSE) +
scale_x_discrete(label = c("Amplicon; Sintax", "Metagenome; GraftM"))
rm(list=ls()) # Clear workspace
graphics.off() # Clear plots
cat("\014") # Clear console
######## PACKAGES #############
library(dplyr)
library(readxl)
library(ampvis2)
######### Loading data
metadata = read_excel("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/data/WWTP_sequences/2021-02-09_WWTP_metadata.xlsx")
kraken_refseq = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/bac_refseq/kraken_ampvis_otu/kraken_bac_refseq_combined.csv")
kraken_refseq_wwtp = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/bac_refseq_WWTP/kraken_ampvis_otu/kraken_bac_refseq_wwtp_combined.csv")
kraken_wwtp = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/Arc_refseq_WWTP/kraken_ampvis_otu/kraken_arc_refseq_combined.csv")
kraken_gtdb = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/GTDB/kraken_ampvis_otu/kraken_gtdb_combined.csv")
## Joining tables
data_kraken_full_join = kraken_refseq %>%
full_join(kraken_refseq_wwtp, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(kraken_wwtp, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(kraken_gtdb, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species"))
data_kraken_full_join = data_kraken_full_join[,c(1:16,24:68,17:23)]
## Ampvis objects
kraken_fj_ampvis = amp_load(otutable = data_kraken_full_join, metadata = metadata)
kraken_refseq_refseqwwtp_ampvis = amp_subset_samples(kraken_fj_ampvis, !Database %in% c("WWTP","GTDB"))
kraken_gtdb_excluded = amp_subset_samples(kraken_fj_ampvis, !Database %in% "GTDB")
stats_kraken = amp_alphadiv(kraken_fj_ampvis)
stats_kraken_gtdb_excluded = amp_alphadiv(kraken_gtdb_excluded)
### Normalizing to same number of reads:
kraken_gtdb_excluded_normalized = amp_subset_samples(kraken_gtdb_excluded, rarefy = 2733929)
######### Report tables and figures
### Figure 3.16 Kraken2 variabel databases, classifed reads plot
stats_kraken_gtdb_excluded %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads)) +
geom_jitter(aes(color = Plant), alpha = .8, , size = 2.5, width = .2) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
ylab("Classified Reads") +
ylim(c(0,1))
stats_kraken_gtdb_excluded %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads * 100)) +
geom_jitter(aes(color = Plant), alpha = .8, , size = 2.5, width = .2) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
ylab("Classified Reads (%)") +
ylim(c(0,1))
stats_kraken_gtdb_excluded %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads * 100)) +
geom_jitter(aes(color = Plant), alpha = .8, , size = 2.5, width = .2) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
ylab("Classified Reads (%)") +
ylim(c(0,100))
amp_heatmap(kraken_gtdb_excluded_normalized,
group_by = "Database",
tax_empty = "remove",
normalise = FALSE,
tax_aggregate = "Family",
tax_show = 10)
rm(list=ls()) # Clear workspace
graphics.off() # Clear plots
cat("\014") # Clear console
######## PACKAGES #############
library(dplyr)
library(readxl)
library(ampvis2)
######### Loading data
metadata = read_excel("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/data/WWTP_sequences/2021-02-09_WWTP_metadata.xlsx")
kaiju_refseq = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/kaiju_refseq/ampvis_otu/kaiju_refseq_ampvis_combined.csv")
corekaiju_refseq = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_ampvis_otu/corekaiju_refseq_ampvis_combined.csv")
corekaiju_refseq_t5 = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_t5_ampvis_otu/corekaiju_refseq_t5_ampvis_combined.csv")
corekaiju_refseq_t10 = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_t10_ampvis_otu/corekaiju_refseq_t10_ampvis_combined.csv")
corekaiju_refseq_t20 = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_t20_ampvis_otu/corekaiju_refseq_t20_ampvis_combined.csv")
data_kaiju_full_join = kaiju_refseq %>%
full_join(corekaiju_refseq, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(corekaiju_refseq_t5, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(corekaiju_refseq_t10, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(corekaiju_refseq_t20, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species"))
data_kaiju_full_join = data_kaiju_full_join[,c(1:16,24:83,17:23)]
kaiju_fj_ampvis = amp_load(otutable = data_kaiju_full_join, metadata = metadata)
stats_kaiju_fj = amp_alphadiv(kaiju_fj_ampvis)
corekaiju_ampvis = amp_subset_samples(kaiju_fj_ampvis, Classifier == "CoreKaiju")
stats_corekaiju = amp_alphadiv(corekaiju_ampvis)
kaiju_ampvis = amp_subset_samples(kaiju_fj_ampvis, Classifier == "Kaiju")
stats_kaiju = amp_alphadiv(kaiju_ampvis)
stats_kaiju_fj$Database = factor(stats_kaiju_fj$Database, levels = c("Refseq", "Refseq_t0", "Refseq_t5", "Refseq_t10", "Refseq_t20"))
stats_corekaiju$Database = factor(stats_corekaiju$Database, levels = c("Refseq_t0", "Refseq_t5", "Refseq_t10", "Refseq_t20"))
kaiju_fj_ampvis$metadata$Database = factor(kaiju_fj_ampvis$metadata$Database, levels = c("Refseq", "Refseq_t0", "Refseq_t5", "Refseq_t10", "Refseq_t20"))
kaiju_fj_ampvis_filtered = amp_subset_samples(kaiju_fj_ampvis, rarefy = 772893)
stats_kaiju_fj_ampvis_filtered = amp_alphadiv(kaiju_fj_ampvis_filtered)
######### Report tables and figures
## Figure 3.18 - Kaiju / Core kaiju percent read classified
stats_kaiju_fj %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads)) +
geom_jitter(aes(color = Plant), width = .2, alpha = .9, size = 2.5) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t0", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20")) +
ylab("Classified Reads") +
ylim(c(0,1)) +
xlab("Classification Protocol")
## Figure 3.19 - Heatmap of 30 most abundant phylas
amp_heatmap(kaiju_fj_ampvis,
group_by = "Database",
tax_empty = "remove",
tax_aggregate = "Phylum",
tax_show = 30,
normalise = FALSE) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t0", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20"))
amp_heatmap(kaiju_fj_ampvis_filtered,
group_by = "Database",
tax_empty = "remove",
tax_aggregate = "Phylum",
tax_show = 30,
normalise = FALSE) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t0", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20"))
## Figure 3.20 Shannon diversity
ggplot(stats_kaiju_fj_ampvis_filtered, aes(x = Database, y = Shannon)) +
geom_jitter(aes(color = Plant), alpha = .8, , size = 2.5, width = .2) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"))  +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t0", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20")) +
xlab("Classification Protocol") +
ylab("Shannon Diversity") +
ylim(0,8)
get_mean = function(data, database) {
i = data %>%
filter(Database == database) %>%
select(Shannon)
j = round(mean(i$Shannon),2)
return(j)
}
get_mean(stats_kaiju_fj_ampvis_filtered, "Refseq")
get_mean(stats_kaiju_fj_ampvis_filtered, "Refseq_t0")
get_mean(stats_kaiju_fj_ampvis_filtered, "Refseq_t5")
get_mean(stats_kaiju_fj_ampvis_filtered, "Refseq_t10")
get_mean(stats_kaiju_fj_ampvis_filtered, "Refseq_t20")
stats_kaiju_fj %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads * 100)) +
geom_jitter(aes(color = Plant), width = .2, alpha = .9, size = 2.5) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t0", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20")) +
ylab("Classified Reads (%)") +
ylim(c(0,1)) +
xlab("Classification Protocol")
stats_kaiju_fj %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads * 100)) +
geom_jitter(aes(color = Plant), width = .2, alpha = .9, size = 2.5) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t0", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20")) +
ylab("Classified Reads (%)") +
ylim(c(0,100)) +
xlab("Classification Protocol")
amp_heatmap(kaiju_fj_ampvis_filtered,
group_by = "Database",
tax_empty = "remove",
tax_aggregate = "Phylum",
tax_show = 30,
normalise = FALSE) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t1", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20"))
stats_kaiju_fj %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads * 100)) +
geom_jitter(aes(color = Plant), width = .2, alpha = .9, size = 2.5) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t1", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20")) +
ylab("Classified Reads (%)") +
ylim(c(0,100)) +
xlab("Classification Protocol")
ggplot(stats_kaiju_fj_ampvis_filtered, aes(x = Database, y = Shannon)) +
geom_jitter(aes(color = Plant), alpha = .8, , size = 2.5, width = .2) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"))  +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t1", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20")) +
xlab("Classification Protocol") +
ylab("Shannon Diversity") +
ylim(0,8)
amp_heatmap(kaiju_fj_ampvis,
group_by = "Database",
tax_empty = "remove",
tax_aggregate = "Phylum",
tax_show = 30,
normalise = FALSE) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t1", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20"))
amp_heatmap(kaiju_fj_ampvis,
group_by = "Database",
tax_empty = "remove",
tax_aggregate = "Phylum",
tax_show = 30) +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t1", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20"))
rm(list=ls()) # Clear workspace
graphics.off() # Clear plots
cat("\014") # Clear console
######## PACKAGES #############
library(dplyr)
library(readxl)
library(ampvis2)
######### Loading data
metadata = read_excel("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/data/WWTP_sequences/2021-02-09_WWTP_metadata.xlsx")
kraken_refseq = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/bac_refseq/kraken_ampvis_otu/kraken_bac_refseq_combined.csv")
kraken_refseq_wwtp = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/bac_refseq_WWTP/kraken_ampvis_otu/kraken_bac_refseq_wwtp_combined.csv")
kraken_wwtp = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/Arc_refseq_WWTP/kraken_ampvis_otu/kraken_arc_refseq_combined.csv")
kraken_gtdb = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kraken2/GTDB/kraken_ampvis_otu/kraken_gtdb_combined.csv")
## Joining tables
data_kraken_full_join = kraken_refseq %>%
full_join(kraken_refseq_wwtp, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(kraken_wwtp, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(kraken_gtdb, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species"))
data_kraken_full_join = data_kraken_full_join[,c(1:16,24:68,17:23)]
## Ampvis objects
kraken_fj_ampvis = amp_load(otutable = data_kraken_full_join, metadata = metadata)
kraken_refseq_refseqwwtp_ampvis = amp_subset_samples(kraken_fj_ampvis, !Database %in% c("WWTP","GTDB"))
kraken_gtdb_excluded = amp_subset_samples(kraken_fj_ampvis, !Database %in% "GTDB")
stats_kraken = amp_alphadiv(kraken_fj_ampvis)
stats_kraken_gtdb_excluded = amp_alphadiv(kraken_gtdb_excluded)
### Normalizing to same number of reads:
kraken_gtdb_excluded_normalized = amp_subset_samples(kraken_gtdb_excluded, rarefy = 2733929)
######### Report tables and figures
### Figure 3.16 Kraken2 variabel databases, classifed reads plot
stats_kraken_gtdb_excluded %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads * 100)) +
geom_jitter(aes(color = Plant), alpha = .8, , size = 2.5, width = .2) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
ylab("Classified Reads (%)") +
ylim(c(0,100))
### Figure 3.17 Heatmaps at four taxonomic levels
amp_heatmap(kraken_gtdb_excluded_normalized,
group_by = "Database",
tax_empty = "remove",
normalise = FALSE,
tax_aggregate = "Species",
tax_show = 10)
amp_heatmap(kraken_gtdb_excluded_normalized,
group_by = "Database",
tax_empty = "remove",
normalise = FALSE,
tax_aggregate = "Family",
tax_show = 10)
kraken_gtdb_excluded_normalized$metadata$Database = factor(kraken_gtdb_excluded_normalized$metadata$Database, levels = c("RefSeq", "WWTP", "Refseq_WWTP"))
amp_heatmap(kraken_gtdb_excluded_normalized,
group_by = "Database",
tax_empty = "remove",
normalise = FALSE,
tax_aggregate = "Species",
tax_show = 10)
amp_heatmap(kraken_gtdb_excluded_normalized,
group_by = "Database",
tax_empty = "remove",
normalise = FALSE,
tax_aggregate = "Family",
tax_show = 10)
### Figure 3.16 Kraken2 variabel databases, classifed reads plot
stats_kraken_gtdb_excluded$Database = factor(stats_kraken_gtdb_excluded$Database, levels = c("RefSeq", "WWTP", "Refseq_WWTP"))
stats_kraken_gtdb_excluded %>%
mutate(normalized_reads = Reads / Metagenome_size_at) %>%
ggplot(aes(x = Database, y = normalized_reads * 100)) +
geom_jitter(aes(color = Plant), alpha = .8, , size = 2.5, width = .2) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey90")) +
ylab("Classified Reads (%)") +
ylim(c(0,100))
amp_heatmap(kraken_gtdb_excluded_normalized,
group_by = "Database",
tax_empty = "remove",
normalise = FALSE,
tax_aggregate = "Species",
tax_show = 10)
amp_heatmap(kraken_gtdb_excluded_normalized,
group_by = "Database",
tax_empty = "remove",
normalise = FALSE,
tax_aggregate = "Family",
tax_show = 10)
rm(list=ls()) # Clear workspace
graphics.off() # Clear plots
cat("\014") # Clear console
######## PACKAGES #############
library(dplyr)
library(readxl)
library(ampvis2)
######### Loading data
metadata = read_excel("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/data/WWTP_sequences/2021-02-09_WWTP_metadata.xlsx")
kaiju_refseq = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/kaiju_refseq/ampvis_otu/kaiju_refseq_ampvis_combined.csv")
corekaiju_refseq = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_ampvis_otu/corekaiju_refseq_ampvis_combined.csv")
corekaiju_refseq_t5 = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_t5_ampvis_otu/corekaiju_refseq_t5_ampvis_combined.csv")
corekaiju_refseq_t10 = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_t10_ampvis_otu/corekaiju_refseq_t10_ampvis_combined.csv")
corekaiju_refseq_t20 = read.csv("/srv/MA/Projects/microflora_danica/analysis/projects/MFD_seges/results/WWTP_sequences/kaiju/corekaiju/refseq_t20_ampvis_otu/corekaiju_refseq_t20_ampvis_combined.csv")
data_kaiju_full_join = kaiju_refseq %>%
full_join(corekaiju_refseq, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(corekaiju_refseq_t5, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(corekaiju_refseq_t10, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species")) %>%
full_join(corekaiju_refseq_t20, by = c("OTU", "Kingdom","Phylum","Class","Order","Family","Genus","Species"))
data_kaiju_full_join = data_kaiju_full_join[,c(1:16,24:83,17:23)]
kaiju_fj_ampvis = amp_load(otutable = data_kaiju_full_join, metadata = metadata)
stats_kaiju_fj = amp_alphadiv(kaiju_fj_ampvis)
corekaiju_ampvis = amp_subset_samples(kaiju_fj_ampvis, Classifier == "CoreKaiju")
stats_corekaiju = amp_alphadiv(corekaiju_ampvis)
kaiju_ampvis = amp_subset_samples(kaiju_fj_ampvis, Classifier == "Kaiju")
stats_kaiju = amp_alphadiv(kaiju_ampvis)
stats_kaiju_fj$Database = factor(stats_kaiju_fj$Database, levels = c("Refseq", "Refseq_t0", "Refseq_t5", "Refseq_t10", "Refseq_t20"))
stats_corekaiju$Database = factor(stats_corekaiju$Database, levels = c("Refseq_t0", "Refseq_t5", "Refseq_t10", "Refseq_t20"))
kaiju_fj_ampvis$metadata$Database = factor(kaiju_fj_ampvis$metadata$Database, levels = c("Refseq", "Refseq_t0", "Refseq_t5", "Refseq_t10", "Refseq_t20"))
corekaiju_t5_ampvis = amp_subset_samples(corekaiju_ampvis, Database == "Refseq_t20")
corekaiju_t20_ampvis = amp_subset_samples(corekaiju_ampvis, Database == "Refseq_t20")
stats_corekaiju_t20_ampvis = amp_alphadiv(corekaiju_t20_ampvis)
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_bar()
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_jitter()
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"))  +
scale_x_discrete(labels = c("Kaiju", "Core Kaiju t1", "Core Kaiju t5", "Core Kaiju t10", "Core Kaiju t20")) +
xlab("Classification Protocol") +
ylab("Shannon Diversity") +
ylim(0,8)
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_bar(stat = "identity")
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_bar(stat = "identity") +
theme_classic()
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_bar(stat = "identity") +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"), axis.text.x = element_text(angle = 90))  +
xlab("") +
ylab("Phylotypes")
View(corekaiju_t20_ampvis)
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_bar(stat = "identity") +
scale_y_continuous(expand = c(0, 0))
ggplot(stats_corekaiju_t20_ampvis, aes(x = Plant, y = ObservedOTUs)) +
geom_bar(stat = "identity") +
scale_y_continuous(expand = c(0, 0)) +
theme_classic() +
theme(panel.grid.major = element_line(color = "grey90"), axis.text.x = element_text(angle = 90))  +
xlab("") +
ylab("Phylotypes")
rm(list=ls()) # Clear workspace
graphics.off() # Clear plots
cat("\014") # Clear console
######## PACKAGES #############
library(dplyr)
library(ampvis2)
library(readxl)
library(tidyr)
library(stringr)
mfd_metadata = read.csv("/srv/MA/Projects/microflora_danica/analysis/mfd_metadata/2020-11-10-14-47_mdf_metadata.csv")
mfd_metadata_filtered = mfd_metadata
mfd_metadata_filtered$habitattype = as.character(mfd_metadata_filtered$habitattype)
mfd_metadata_filtered$habitattype = replace_na(mfd_metadata_filtered$habitattype, "Not_Registred")
m = c()
for(i in 1:nrow(mfd_metadata_filtered)) {
bog_list = str_detect(mfd_metadata_filtered$habitattype, "bog")
dune_list = str_detect(mfd_metadata_filtered$habitattype, "dune")
forest_list = str_detect(mfd_metadata_filtered$habitattype, "forest")
grasslands_list = str_detect(mfd_metadata_filtered$habitattype, "grasslands")
lake_list = str_detect(mfd_metadata_filtered$habitattype, "lake")
meadow_list = str_detect(mfd_metadata_filtered$habitattype, "meadow")
moor_list = str_detect(mfd_metadata_filtered$habitattype, "moor")
swamp_list = str_detect(mfd_metadata_filtered$habitattype, "swamp")
if(bog_list[i] == TRUE) {
m[i] = "bog"
} else if(forest_list[i] == TRUE) {
m[i] = "forest"
} else if(grasslands_list[i] == TRUE) {
m[i] = "grasslands"
} else if(lake_list[i] == TRUE) {
m[i] = "lake"
} else if(dune_list[i] == TRUE) {
m[i] = "dune"
} else if(meadow_list[i] == TRUE) {
m[i] = "meadow"
} else if(moor_list[i] == TRUE) {
m[i] = "moor"
} else if(swamp_list[i] == TRUE) {
m[i] = "swamp"
} else {
m[i] = mfd_metadata_filtered$habitattype[i]
}
}
mfd_metadata_filtered$habitattype_new = m
mfd_metadata_filtered = mfd_metadata_filtered %>%
filter(habitattype_new %in% c("agriculture", "urban", "River Valleys","bog", "dune", "meadow", "lake", "stream", "grasslands", "forest", "moor"))
kraken2_otu = read.csv("/srv/MA/Projects/microflora_danica/analysis/classified_kraken2/refseq/ampvis_format/kraken2_refseq_ampvis_combined.csv", check.names = FALSE)
kraken2_ampvis = amp_load(kraken2_otu, metadata = mfd_metadata_filtered)
kraken2_ampvis_stats = amp_alphadiv(kraken2_ampvis)
kraken2_ampvis_filtered = amp_subset_samples(kraken2_ampvis, conc_extraction > 1, total_reads > 10000000,!id_sequencing_admera %in% c("20003FL-02-01-01", "20003FL-02-01-04", "20003FL-02-01-05", "20003FL-02-01-06", "20003FL-02-01-07", "20003FL-02-01-08", "20003FL-02-01-09", "20003FL-02-01-101", "20003FL-02-01-102", "20003FL-02-01-104", "20003FL-02-01-106", "20003FL-02-01-107", "20003FL-02-01-10", "20003FL-02-01-110", "20003FL-02-01-119", "20003FL-02-01-109", "20003FL-02-01-111"))
kraken2_ampvis_filtered_stats = amp_alphadiv(kraken2_ampvis_filtered)
kraken2_ampvis_filtered_soil = amp_subset_samples(kraken2_ampvis_filtered, type == "soil")
kraken2_ampvis_filtered_soil_stats = amp_alphadiv(kraken2_ampvis_filtered_soil)
kraken2_family = ampvis2:::aggregate_abund(kraken2_ampvis_filtered$abund, kraken2_ampvis_filtered$tax, tax_aggregate = "Family", format = "abund")
kraken2_family_ampvis = amp_load(kraken2_family, metadata = mfd_metadata_filtered)
amp_ordinate(kraken2_family_nostream, sample_color_by = "habitattype_new", sample_colorframe = TRUE,type="CA")+theme(legend.position = "none",text=element_text(size=18))+ggtitle("Kraken2 - CA")
kraken2_family_nostream=amp_subset_samples(kraken2_family_ampvis, habitattype_new != c("stream"))
amp_ordinate(kraken2_family_nostream, sample_color_by = "habitattype_new", sample_colorframe = TRUE,type="CA")+theme(legend.position = "none",text=element_text(size=18))+ggtitle("Kraken2 - CA")
amp_ordinate(kraken2_family_nostream, sample_color_by = "habitattype_new", sample_colorframe = TRUE,type="CA")+theme(text=element_text(size=18))+ggtitle("Kraken2 - CA")
amp_ordinate(kraken2_family_nostream, sample_color_by = "habitattype_new", sample_colorframe = TRUE,type="CA")+theme()+ggtitle("Kraken2 - CA")
setwd("/srv/MA/users/fplatz16/toAmpvis/toAmpvis/")
library(devtools)
document()
document()
document()
